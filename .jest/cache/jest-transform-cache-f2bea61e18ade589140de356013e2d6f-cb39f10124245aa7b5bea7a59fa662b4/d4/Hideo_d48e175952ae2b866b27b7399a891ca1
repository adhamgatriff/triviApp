cb5464f33cf30729c4b53e6afecf1a0e
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactNative = require("react-native");







var _BaseInput = _interopRequireDefault(require("./BaseInput"));var _jsxFileName = "C:\\Users\\BESSY\\Documents\\triviaApp\\node_modules\\react-native-textinput-effects\\lib\\Hideo.js";function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var

Hideo = function (_BaseInput) {_inherits(Hideo, _BaseInput);function Hideo() {_classCallCheck(this, Hideo);return _possibleConstructorReturn(this, _getPrototypeOf(Hideo).apply(this, arguments));}_createClass(Hideo, [{ key: "render", value: function render()


































    {var _this$props =









      this.props,iconClass = _this$props.iconClass,iconColor = _this$props.iconColor,iconSize = _this$props.iconSize,iconName = _this$props.iconName,iconBackgroundColor = _this$props.iconBackgroundColor,containerStyle = _this$props.style,inputStyle = _this$props.inputStyle,inputHeight = _this$props.height;var _this$state =



      this.state,focusedAnim = _this$state.focusedAnim,value = _this$state.value;
      var AnimatedIcon = _reactNative.Animated.createAnimatedComponent(iconClass);

      return (
        _react.default.createElement(_reactNative.View, {
          style: [styles.container, containerStyle],
          onLayout: this._onLayout, __source: { fileName: _jsxFileName, lineNumber: 66 } },

        _react.default.createElement(_reactNative.TouchableWithoutFeedback, { onPress: this.focus, __source: { fileName: _jsxFileName, lineNumber: 70 } },
        _react.default.createElement(_reactNative.Animated.View, {
          style: {
            backgroundColor: iconBackgroundColor,
            justifyContent: 'center',
            alignItems: 'center',
            height: inputHeight,
            width: focusedAnim.interpolate({
              inputRange: [0, 1],
              outputRange: [60, 40] }) }, __source: { fileName: _jsxFileName, lineNumber: 71 } },



        _react.default.createElement(AnimatedIcon, {
          name: iconName,
          color: iconColor,
          style: {
            fontSize: focusedAnim.interpolate({
              inputRange: [0, 1],
              outputRange: [iconSize, iconSize * 0.6] }) }, __source: { fileName: _jsxFileName, lineNumber: 83 } }))),





        _react.default.createElement(_reactNative.TextInput, _extends({
          ref: "input" },
        this.props, {
          style: [styles.textInput, inputStyle],
          value: value,
          onBlur: this._onBlur,
          onChange: this._onChange,
          onFocus: this._onFocus,
          underlineColorAndroid: 'transparent', __source: { fileName: _jsxFileName, lineNumber: 95 } }))));



    } }]);return Hideo;}(_BaseInput.default);exports.default = Hideo;Hideo.propTypes = { iconBackgroundColor: _propTypes.default.string, iconClass: _propTypes.default.func.isRequired, iconName: _propTypes.default.string.isRequired, iconColor: _propTypes.default.string, iconSize: _propTypes.default.number };Hideo.defaultProps = { iconColor: 'white', iconSize: 25, iconBackgroundColor: '#899dda', height: 48, animationDuration: 200 };


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'row' },

  textInput: {
    flex: 1,
    paddingHorizontal: 16,
    paddingVertical: 0,
    color: 'black',
    backgroundColor: 'white',
    fontSize: 18 } });