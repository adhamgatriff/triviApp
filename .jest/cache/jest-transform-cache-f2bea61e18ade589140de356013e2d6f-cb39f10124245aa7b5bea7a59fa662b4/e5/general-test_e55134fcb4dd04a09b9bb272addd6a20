dcb0318f4487c9a6d64184ef2b3c32ab
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");var _react = _interopRequireDefault(require("react"));
var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));
var _Home = _interopRequireDefault(require("../components/views/Home"));
var _Menu = _interopRequireDefault(require("../components/views/Menu"));
var _QuestionScreen = _interopRequireDefault(require("../components/views/QuestionScreen"));
var _ResultScreen = _interopRequireDefault(require("../components/views/ResultScreen"));
var _Stats = _interopRequireDefault(require("../components/views/Stats"));var _jsxFileName = "C:\\Users\\BESSY\\Documents\\triviaApp\\__tests__\\general-test.js";






describe('Mains Componets render correctly', function () {
  test('Home should render correctly', function () {
    var home = _reactTestRenderer.default.create(_react.default.createElement(_Home.default, { __source: { fileName: _jsxFileName, lineNumber: 16 } })).toJSON();
    expect(home).toMatchSnapshot();
  });

  test('Menu should render correctly', function () {
    var menu = _reactTestRenderer.default.create(_react.default.createElement(_Menu.default, { __source: { fileName: _jsxFileName, lineNumber: 21 } })).toJSON();
    expect(menu).toMatchSnapshot();
  });

  test('QuestionScreen should render correctly', function () {
    var navigationMock = {
      getParam: jest.fn(function (x) {

        if (x === 'questions') return [{ correct_answer: 'true', incorrect_anwers: 'false' }];
        if (x === 'questionsLength') return '1';
        return 'test';
      }) };


    var tree = _reactTestRenderer.default.create(_react.default.createElement(_QuestionScreen.default, { navigation: navigationMock, __source: { fileName: _jsxFileName, lineNumber: 35 } })).toJSON();
    expect(tree).toMatchSnapshot();
  });

  test('ResultScreen should render correctly', function () {
    var navigationMock = {
      getParam: jest.fn(function (x) {
        if (x === 'username') return 'testuser';
        if (x === 'pointsEarned') return '100';
        return 'test';
      }) };


    var result = _reactTestRenderer.default.create(_react.default.createElement(_ResultScreen.default, { navigation: navigationMock, __source: { fileName: _jsxFileName, lineNumber: 48 } })).toJSON();
    expect(result).toMatchSnapshot();
  });

  test('Stats should render correctly', function () {
    var stats = _reactTestRenderer.default.create(_react.default.createElement(_Stats.default, { __source: { fileName: _jsxFileName, lineNumber: 53 } })).toJSON();
    expect(stats).toMatchSnapshot();
  });
});