f3e30e377f0b1bc443ba200902f9ffd3
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");


var _Colors = _interopRequireDefault(require("../../resources/Colors"));
var _Button = _interopRequireDefault(require("../global/Button"));
var _Spinner = _interopRequireDefault(require("../global/Spinner"));var _jsxFileName = "C:\\Users\\BESSY\\Documents\\triviaApp\\components\\views\\Stats.js";var















Stats = function (_React$Component) {(0, _inherits2.default)(Stats, _React$Component);
  function Stats(props) {var _this;(0, _classCallCheck2.default)(this, Stats);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Stats).call(this, props));
    _this.state = {
      stats: [],
      loading: true };return _this;

  }(0, _createClass2.default)(Stats, [{ key: "componentDidMount", value: function componentDidMount() {var pureStats, stats;return _regenerator.default.async(function componentDidMount$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.t0 =






              JSON;_context.next = 3;return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('stats'));case 3:_context.t1 = _context.sent;pureStats = _context.t0.parse.call(_context.t0, _context.t1);
              stats = pureStats.sort(function (a, b) {return a.points + b.points;}).filter(function (val) {return val.points > 0;});

              this.setState({
                stats: stats,
                loading: false });case 7:case "end":return _context.stop();}}}, null, this);} }, { key: "render", value: function render()



    {var _this$state =
      this.state,stats = _this$state.stats,loading = _this$state.loading;var
      navigation = this.props.navigation;

      if (!loading && stats.length === 0) {
        return (
          React.createElement(_reactNative.View, { style: styles.specialWrapper, __source: { fileName: _jsxFileName, lineNumber: 53 } },
          React.createElement(_reactNative.Text, { style: { fontSize: 26, color: _Colors.default.red }, __source: { fileName: _jsxFileName, lineNumber: 54 } }, "Nothing to show.")));


      }

      return (
        React.createElement(_reactNative.View, { style: styles.wrapper, __source: { fileName: _jsxFileName, lineNumber: 60 } },
        React.createElement(_reactNative.View, { style: styles.titleWrapper, __source: { fileName: _jsxFileName, lineNumber: 61 } },
        React.createElement(_Button.default, {
          buttonStyle: styles.backButton,
          icon: "md-arrow-back",
          iconColor: _Colors.default.gray,
          action: function action() {return navigation.goBack();}, __source: { fileName: _jsxFileName, lineNumber: 62 } }),

        React.createElement(_reactNative.Text, { style: styles.title, __source: { fileName: _jsxFileName, lineNumber: 68 } }, "Stats")),

        loading ? React.createElement(_Spinner.default, { __source: { fileName: _jsxFileName, lineNumber: 70 } }) :
        React.createElement(_reactNative.View, { style: { marginTop: 10 }, __source: { fileName: _jsxFileName, lineNumber: 71 } },
        React.createElement(_reactNative.View, { style: styles.list, __source: { fileName: _jsxFileName, lineNumber: 72 } },
        React.createElement(_reactNative.Text, { style: styles.userText, __source: { fileName: _jsxFileName, lineNumber: 73 } }, "Name"),
        React.createElement(_reactNative.Text, { style: styles.pointText, __source: { fileName: _jsxFileName, lineNumber: 74 } }, "Points")),

        React.createElement(_reactNative.FlatList, {
          data: stats,
          renderItem: function renderItem(_ref) {var item = _ref.item;return (
              React.createElement(_reactNative.View, { style: [styles.list, { paddingBottom: 5 }], __source: { fileName: _jsxFileName, lineNumber: 79 } },
              React.createElement(_reactNative.Text, { style: [styles.userText, { fontWeight: '400', color: _Colors.default.gray }], __source: { fileName: _jsxFileName, lineNumber: 80 } }, item.user),
              React.createElement(_reactNative.Text, { style: [styles.pointText, { fontWeight: '400' }], __source: { fileName: _jsxFileName, lineNumber: 81 } }, item.points)));},


          keyExtractor: function keyExtractor(val, ind) {return String(ind);}, __source: { fileName: _jsxFileName, lineNumber: 76 } }))));





    } }]);return Stats;}(React.Component);exports.default = Stats;


var styles = _reactNative.StyleSheet.create({
  wrapper: {
    flex: 1,
    backgroundColor: _Colors.default.black },

  specialWrapper: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: _Colors.default.black },

  titleWrapper: {
    justifyContent: 'center',
    alignItems: 'flex-start',
    paddingLeft: 5,
    marginVertical: 5,
    flexDirection: 'row' },

  title: {
    flex: 1,
    fontFamily: 'BreeSerif',
    fontSize: 26,
    color: _Colors.default.gray,
    textAlign: 'center' },

  backButton: {
    backgroundColor: 'transparent' },

  list: {
    flexDirection: 'row',
    justifyContent: 'space-around' },

  userText: {
    color: _Colors.default.yellow,
    fontSize: 22,
    fontWeight: 'bold' },

  pointText: {
    color: _Colors.default.red,
    fontSize: 22,
    fontWeight: 'bold' } });