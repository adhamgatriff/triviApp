ed694ed3fb449db30af793964ff8be36
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = createTabBarItemIOSComponent;
var _isEqual = _interopRequireDefault(require("lodash/isEqual"));
var _pick = _interopRequireDefault(require("lodash/pick"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactNative = require("./react-native");var _jsxFileName = "C:\\Users\\BESSY\\Documents\\triviaApp\\node_modules\\react-native-vector-icons\\lib\\tab-bar-item-ios.js";function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};if (desc.get || desc.set) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}}newObj.default = obj;return newObj;}}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

var ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];
var SELECTED_ICON_PROP_NAMES =
ICON_PROP_NAMES.concat([
'selectedIconName',
'selectedIconColor']);


var arePropsEqual = function arePropsEqual(keys) {return function (prevProps, nextProps) {return (
      (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys)));};};

var areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);
var areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);

function createTabBarItemIOSComponent(
IconNamePropType,
getImageSource)
{var _class, _temp;
  return _temp = _class = function (_PureComponent) {_inherits(TabBarItemIOS, _PureComponent);function TabBarItemIOS() {var _getPrototypeOf2;var _this;_classCallCheck(this, TabBarItemIOS);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarItemIOS)).call.apply(_getPrototypeOf2, [this].concat(args)));_this.















      state = {
        icon: undefined,
        selectedIcon: undefined };return _this;}_createClass(TabBarItemIOS, [{ key: "componentDidMount", value: function componentDidMount()


      {
        this.updateIconSource();
        this.updateSelectedIconSource();
      } }, { key: "componentDidUpdate", value: function componentDidUpdate(

      prevProps) {
        if (!areIconPropsEqual(prevProps, this.props)) {
          this.updateIconSource();
        }
        if (!areSelectedIconPropsEqual(prevProps, this.props)) {
          this.updateSelectedIconSource();
        }
      } }, { key: "updateIconSource", value: function updateIconSource() {var _this$props, iconName, iconSize, iconColor, icon;return regeneratorRuntime.async(function updateIconSource$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_this$props =


                this.props, iconName = _this$props.iconName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor;if (!
                iconName) {_context.next = 8;break;}_context.next = 4;return regeneratorRuntime.awrap(
                getImageSource(iconName, iconSize, iconColor));case 4:icon = _context.sent;
                this.setState({ icon: icon });_context.next = 9;break;case 8:

                if (this.state.icon) {
                  this.setState({ icon: undefined });
                }case 9:case "end":return _context.stop();}}}, null, this);} }, { key: "updateSelectedIconSource", value: function updateSelectedIconSource() {var _this$props2, iconName, iconColor, iconSize, selectedIconName, selectedIconColor, selectedIcon;return regeneratorRuntime.async(function updateSelectedIconSource$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:_this$props2 =









                this.props, iconName = _this$props2.iconName, iconColor = _this$props2.iconColor, iconSize = _this$props2.iconSize, selectedIconName = _this$props2.selectedIconName, selectedIconColor = _this$props2.selectedIconColor;if (!(
                selectedIconName || selectedIconColor)) {_context2.next = 8;break;}_context2.next = 4;return regeneratorRuntime.awrap(
                getImageSource(
                selectedIconName || iconName,
                iconSize,
                selectedIconColor || iconColor));case 4:selectedIcon = _context2.sent;

                this.setState({ selectedIcon: selectedIcon });_context2.next = 9;break;case 8:

                if (this.state.selectedIcon) {
                  this.setState({ selectedIcon: undefined });
                }case 9:case "end":return _context2.stop();}}}, null, this);} }, { key: "render", value: function render()


      {
        return _react.default.createElement(_reactNative.TabBarIOS.Item, _extends({}, this.state, this.props, { __source: { fileName: _jsxFileName, lineNumber: 93 } }));
      } }]);return TabBarItemIOS;}(_react.PureComponent), _class.propTypes = { iconName: IconNamePropType.isRequired, selectedIconName: IconNamePropType, iconSize: _propTypes.default.number, iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]), selectedIconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]) }, _class.defaultProps = { iconSize: 30 }, _temp;

}