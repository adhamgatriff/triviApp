005b66bb703e9f31b20ec68d1a13404b
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.shuffleAnswers = exports.storeData = exports.fetchQuestions = void 0;var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _reactNative = require("react-native");



















var fetchQuestions = function fetchQuestions(difficulty, questionNumber, categorySelected) {
  var APIURL = "https://opentdb.com/api.php?amount=" + (questionNumber || '10') + "&category=" + (categorySelected !== 'any' ? categorySelected : '') + "&difficulty=" + (difficulty || '');

  return fetch(APIURL).
  then(function (res) {return res.json();}).
  then(function (question) {return question;});
};exports.fetchQuestions = fetchQuestions;







var storeData = function storeData(data) {var stats;return _regenerator.default.async(function storeData$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.prev = 0;_context.t0 =

          JSON;_context.next = 4;return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('stats'));case 4:_context.t1 = _context.sent;stats = _context.t0.parse.call(_context.t0, _context.t1);_context.next = 8;return _regenerator.default.awrap(
          _reactNative.AsyncStorage.setItem('stats', JSON.stringify(stats !== null ? [data].concat((0, _toConsumableArray2.default)(stats)) : [data])));case 8:_context.next = 13;break;case 10:_context.prev = 10;_context.t2 = _context["catch"](0);

          _reactNative.Alert.alert('Notification', 'An error has occurred saving the data.', [{ text: 'OK' }], { cancelable: false });case 13:case "end":return _context.stop();}}}, null, this, [[0, 10]]);};exports.storeData = storeData;








var shuffleAnswers = function shuffleAnswers(correctAnsw, incorrectAnsw) {return (0, _toConsumableArray2.default)(incorrectAnsw).concat([correctAnsw]).
  map(function (a) {return [Math.random(), a];}).
  sort(function (a, b) {return a[0] - b[0];}).
  map(function (a) {return a[1];});};exports.shuffleAnswers = shuffleAnswers;