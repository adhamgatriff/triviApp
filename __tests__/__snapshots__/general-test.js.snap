// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mains Componets render correctly Home should render correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#232931",
      "flex": 1,
      "justifyContent": "space-around",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#ededed",
        "fontFamily": "BreeSerif",
        "fontSize": 56,
      }
    }
  >
    TriviApp
  </Text>
  <View
    style={
      Object {
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#f73859",
          "borderRadius": 18,
          "height": 50,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 14,
              "fontWeight": "bold",
              "letterSpacing": 2,
            },
            Object {
              "fontSize": 20,
            },
          ]
        }
      >
        PLAY
      </Text>
    </View>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "marginTop": 20,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f1d18a",
            "borderRadius": 18,
            "height": 45,
            "justifyContent": "center",
            "opacity": 1,
            "paddingHorizontal": 10,
            "paddingVertical": 10,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#232931",
                "fontSize": 30,
              },
              undefined,
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View>
    <Text
      style={
        Object {
          "alignSelf": "flex-end",
          "color": "#ededed",
          "fontSize": 14,
        }
      }
    >
      @Adhamgatriff
    </Text>
  </View>
</View>
`;

exports[`Mains Componets render correctly Menu should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#232931",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginVertical": 5,
        "paddingLeft": 5,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 18,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#ededed",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      style={
        Object {
          "color": "#ededed",
          "flex": 1,
          "fontFamily": "BreeSerif",
          "fontSize": 26,
          "textAlign": "center",
        }
      }
    >
      Choose one category
    </Text>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "label": "Any Category",
          "value": "any",
        },
        Object {
          "label": "General Knowledge",
          "value": "9",
        },
        Object {
          "label": "Entertainment: Books",
          "value": "10",
        },
        Object {
          "label": "Entertainment: Film",
          "value": "11",
        },
        Object {
          "label": "Entertainment: Music",
          "value": "12",
        },
        Object {
          "label": "Entertainment: Musicals & Theatres",
          "value": "13",
        },
        Object {
          "label": "Entertainment: Television",
          "value": "14",
        },
        Object {
          "label": "Entertainment: Video Games",
          "value": "15",
        },
        Object {
          "label": "Entertainment: Board Games",
          "value": "16",
        },
        Object {
          "label": "Science & Nature",
          "value": "17",
        },
        Object {
          "label": "Science: Computers",
          "value": "18",
        },
        Object {
          "label": "Science: Mathematics",
          "value": "19",
        },
        Object {
          "label": "Mythology",
          "value": "20",
        },
        Object {
          "label": "Sports",
          "value": "21",
        },
        Object {
          "label": "Geography",
          "value": "22",
        },
        Object {
          "label": "History",
          "value": "23",
        },
        Object {
          "label": "Politics",
          "value": "24",
        },
        Object {
          "label": "Art",
          "value": "25",
        },
        Object {
          "label": "Celebrities",
          "value": "26",
        },
        Object {
          "label": "Animals",
          "value": "27",
        },
        Object {
          "label": "Vehicles",
          "value": "28",
        },
        Object {
          "label": "Entertainment: Comics",
          "value": "29",
        },
        Object {
          "label": "Science: Gadgets",
          "value": "30",
        },
        Object {
          "label": "Entertainment: Japanese Anime & Manga",
          "value": "31",
        },
        Object {
          "label": "Entertainment: Cartoon & Animations",
          "value": "32",
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "categorySelected": "any",
        "isOptionModalVisible": false,
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            ANY CATEGORY
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            GENERAL KNOWLEDGE
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            ENTERTAINMENT: BOOKS
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            ENTERTAINMENT: FILM
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            ENTERTAINMENT: MUSIC
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            ENTERTAINMENT: MUSICALS & THEATRES
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            ENTERTAINMENT: TELEVISION
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            ENTERTAINMENT: VIDEO GAMES
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            ENTERTAINMENT: BOARD GAMES
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#f73859",
              "borderRadius": 18,
              "flex": 1,
              "height": 60,
              "justifyContent": "center",
              "marginHorizontal": 5,
              "marginVertical": 10,
              "opacity": 1,
              "padding": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 10,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "white",
                  "fontSize": 14,
                  "fontWeight": "bold",
                  "letterSpacing": 2,
                },
                Object {
                  "fontFamily": "BreeSerif",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "textAlign": "center",
                },
              ]
            }
          >
            SCIENCE & NATURE
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
  <View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onRequestClose={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f1d18a",
              "borderRadius": 18,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginTop": 5,
                "paddingLeft": 5,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 18,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingHorizontal": 10,
                  "paddingVertical": 10,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#232931",
                      "fontSize": 30,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <Text
              style={
                Object {
                  "color": "#232931",
                  "flex": 1,
                  "fontFamily": "BreeSerif",
                  "fontSize": 26,
                  "textAlign": "center",
                }
              }
            >
              Options
            </Text>
          </View>
          <View
            style={
              Object {
                "marginTop": 0,
                "paddingBottom": 5,
                "paddingHorizontal": 10,
              }
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  undefined,
                  Object {
                    "height": 64,
                  },
                ]
              }
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "bottom": 40,
                    "position": "absolute",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#232931",
                      "fontFamily": "Arial",
                      "fontSize": 12,
                      "fontWeight": "bold",
                    }
                  }
                >
                  Username
                </Text>
              </View>
              <TextInput
                allowFontScaling={true}
                animationDuration={300}
                defaultValue="User"
                height={48}
                iconClass={[Function]}
                iconColor="#f73859"
                iconName="md-person"
                inputStyle={
                  Object {
                    "color": "#232931",
                    "fontSize": 16,
                    "paddingTop": 0,
                  }
                }
                label="Username"
                labelStyle={
                  Object {
                    "color": "#232931",
                    "fontSize": 16,
                  }
                }
                onBlur={[Function]}
                onChange={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                style={
                  Array [
                    Object {
                      "bottom": 0,
                      "color": "white",
                      "fontSize": 18,
                      "left": 0,
                      "paddingLeft": 0,
                      "paddingTop": 8,
                      "position": "absolute",
                    },
                    Object {
                      "color": "#232931",
                      "fontSize": 16,
                      "paddingTop": 0,
                    },
                    Object {
                      "height": 48,
                      "width": undefined,
                    },
                  ]
                }
                underlineColorAndroid="transparent"
                value="User"
              />
              <Text
                accessible={true}
                allowFontScaling={false}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "color": "#f73859",
                      "fontSize": 12,
                    },
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "fontSize": 20,
                      "position": "absolute",
                      "right": NaN,
                      "transform": Array [
                        Object {
                          "rotate": "-90deg",
                        },
                      ],
                    },
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
              <View
                style={
                  Object {
                    "backgroundColor": "#f73859",
                    "bottom": 0,
                    "height": 2,
                    "position": "absolute",
                    "right": 0,
                    "width": NaN,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "marginTop": 10,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#232931",
                    "fontSize": 12,
                    "fontWeight": "bold",
                  }
                }
              >
                Number of questions
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    style={
                      Array [
                        Object {
                          "paddingRight": 30,
                        },
                        undefined,
                        Object {},
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="10"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderLeftColor": "transparent",
                          "borderLeftWidth": 10,
                          "borderRightColor": "transparent",
                          "borderRightWidth": 10,
                          "borderTopColor": "gray",
                          "borderTopWidth": 10,
                          "height": 0,
                          "position": "absolute",
                          "right": 10,
                          "top": 20,
                          "width": 0,
                        },
                        undefined,
                      ]
                    }
                    testID="icon_ios"
                  />
                </View>
                <Modal
                  hardwareAccelerated={false}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="RNPickerSelectModal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="done_bar"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "flexDirection": "row",
                            "marginLeft": 15,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderRightColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopColor": "#D0D4DB",
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "transform": Array [
                                  Object {
                                    "translateY": 17,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "marginHorizontal": 10,
                          }
                        }
                      />
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderRightColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopColor": "#D0D4DB",
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "transform": Array [
                                  Object {
                                    "translateY": 8,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      hitSlop={
                        Object {
                          "bottom": 2,
                          "left": 2,
                          "right": 2,
                          "top": 2,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 18,
                              "fontWeight": "bold",
                              "padding": 10,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "height": 215,
                          "justifyContent": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Select a number of questions",
                              "textColor": undefined,
                              "value": null,
                            },
                            Object {
                              "label": "10",
                              "textColor": undefined,
                              "value": "10",
                            },
                            Object {
                              "label": "20",
                              "textColor": undefined,
                              "value": "20",
                            },
                            Object {
                              "label": "30",
                              "textColor": undefined,
                              "value": "30",
                            },
                          ]
                        }
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        selectedIndex={1}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              style={
                Object {
                  "marginVertical": 10,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#232931",
                    "fontSize": 12,
                    "fontWeight": "bold",
                  }
                }
              >
                Difficulty
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignSelf": "stretch",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessible={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                >
                  <TextInput
                    allowFontScaling={true}
                    editable={false}
                    style={
                      Array [
                        Object {
                          "paddingRight": 30,
                        },
                        undefined,
                        Object {},
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Easy"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderLeftColor": "transparent",
                          "borderLeftWidth": 10,
                          "borderRightColor": "transparent",
                          "borderRightWidth": 10,
                          "borderTopColor": "gray",
                          "borderTopWidth": 10,
                          "height": 0,
                          "position": "absolute",
                          "right": 10,
                          "top": 20,
                          "width": 0,
                        },
                        undefined,
                      ]
                    }
                    testID="icon_ios"
                  />
                </View>
                <Modal
                  hardwareAccelerated={false}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  testID="RNPickerSelectModal"
                  transparent={true}
                  visible={false}
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#EFF1F2",
                          "borderTopColor": "#919498",
                          "borderTopWidth": 0.5,
                          "flexDirection": "row",
                          "height": 44,
                          "justifyContent": "space-between",
                          "zIndex": 2,
                        },
                        undefined,
                      ]
                    }
                    testID="done_bar"
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "flexDirection": "row",
                            "marginLeft": 15,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderRightColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopColor": "#D0D4DB",
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "transform": Array [
                                  Object {
                                    "translateY": 17,
                                  },
                                  Object {
                                    "rotate": "-45deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "marginHorizontal": 10,
                          }
                        }
                      />
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderRightColor": "#D0D4DB",
                                "borderRightWidth": 1.5,
                                "borderTopColor": "#D0D4DB",
                                "borderTopWidth": 1.5,
                                "height": 15,
                                "width": 15,
                              },
                              undefined,
                              Object {
                                "transform": Array [
                                  Object {
                                    "translateY": 8,
                                  },
                                  Object {
                                    "rotate": "135deg",
                                  },
                                ],
                              },
                              undefined,
                              Object {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <View
                      accessible={true}
                      hitSlop={
                        Object {
                          "bottom": 2,
                          "left": 2,
                          "right": 2,
                          "top": 2,
                        }
                      }
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="done_button"
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#007AFE",
                              "fontSize": 18,
                              "fontWeight": "bold",
                              "padding": 10,
                            },
                            undefined,
                          ]
                        }
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D0D4DB",
                          "height": 215,
                          "justifyContent": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "Select a difficulty",
                              "textColor": undefined,
                              "value": null,
                            },
                            Object {
                              "label": "Easy",
                              "textColor": undefined,
                              "value": "easy",
                            },
                            Object {
                              "label": "Medium",
                              "textColor": undefined,
                              "value": "medium",
                            },
                            Object {
                              "label": "Hard",
                              "textColor": undefined,
                              "value": "hard",
                            },
                          ]
                        }
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        selectedIndex={1}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                      />
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f73859",
                  "borderRadius": 18,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingHorizontal": 10,
                  "paddingVertical": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "letterSpacing": 2,
                    },
                    Object {},
                  ]
                }
              >
                GO
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;

exports[`Mains Componets render correctly QuestionScreen should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#232931",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginVertical": 5,
        "paddingLeft": 5,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 18,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#f1d18a",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#ededed",
            "fontFamily": "BreeSerif",
            "fontSize": 26,
            "paddingHorizontal": 10,
            "textAlign": "center",
          },
          Object {
            "color": "#f1d18a",
            "flex": 1,
            "paddingRight": 10,
            "textAlign": "right",
          },
        ]
      }
    >
      1 / 1
    </Text>
  </View>
  <Text
    style={
      Object {
        "color": "#ededed",
        "fontFamily": "BreeSerif",
        "fontSize": 26,
        "paddingHorizontal": 10,
        "textAlign": "center",
      }
    }
  >
    Random Question
  </Text>
  <View
    style={
      Object {
        "paddingHorizontal": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#f73859",
          "borderRadius": 18,
          "justifyContent": "center",
          "marginVertical": 5,
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 14,
              "fontWeight": "bold",
              "letterSpacing": 2,
            },
            Array [
              Object {
                "fontSize": 18,
                "letterSpacing": 0,
                "textAlign": "center",
              },
            ],
          ]
        }
      >
        a
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#f73859",
          "borderRadius": 18,
          "justifyContent": "center",
          "marginVertical": 5,
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 14,
              "fontWeight": "bold",
              "letterSpacing": 2,
            },
            Array [
              Object {
                "fontSize": 18,
                "letterSpacing": 0,
                "textAlign": "center",
              },
            ],
          ]
        }
      >
        a
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingBottom": 5,
        "paddingHorizontal": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 18,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#f73859",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 14,
              "fontWeight": "bold",
              "letterSpacing": 2,
            },
            Object {
              "letterSpacing": 0,
            },
          ]
        }
      >
        SKIP QUESTION
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 18,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#f73859",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 14,
              "fontWeight": "bold",
              "letterSpacing": 2,
            },
            Object {
              "letterSpacing": 0,
            },
          ]
        }
      >
        CONFIRM
      </Text>
    </View>
  </View>
  <View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onRequestClose={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#f1d18a",
              "borderRadius": 18,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginTop": 5,
                "paddingLeft": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#232931",
                  "flex": 1,
                  "fontFamily": "BreeSerif",
                  "fontSize": 26,
                  "textAlign": "center",
                }
              }
            >
              Error!!
            </Text>
          </View>
          <View>
            <Text
              style={
                Object {
                  "color": "#232931",
                  "fontSize": 18,
                  "textAlign": "center",
                }
              }
            >
              The correct answer is
            </Text>
            <Text
              style={
                Object {
                  "color": "#f73859",
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
            >
              a
            </Text>
          </View>
          <View
            style={
              Object {
                "marginTop": 0,
                "paddingBottom": 5,
                "paddingHorizontal": 10,
              }
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f73859",
                  "borderRadius": 18,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingHorizontal": 10,
                  "paddingVertical": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "letterSpacing": 2,
                    },
                    Object {},
                  ]
                }
              >
                NEXT QUESTION
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;

exports[`Mains Componets render correctly ResultScreen should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#232931",
      "flex": 1,
      "justifyContent": "space-between",
      "paddingTop": 20,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#ededed",
        "fontFamily": "BreeSerif",
        "fontSize": 30,
        "paddingHorizontal": 10,
        "textAlign": "center",
      }
    }
  >
    Congratulations testuser!!
  </Text>
  <View
    style={
      Object {
        "paddingHorizontal": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#f73859",
          "fontSize": 26,
          "fontWeight": "bold",
          "textAlign": "center",
        }
      }
    >
      Your final score was
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#f73859",
            "fontSize": 26,
            "fontWeight": "bold",
            "textAlign": "center",
          },
          Object {
            "color": "#f1d18a",
            "fontSize": 30,
          },
        ]
      }
    >
      100
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingBottom": 5,
        "paddingHorizontal": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 18,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#f73859",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 14,
              "fontWeight": "bold",
              "letterSpacing": 2,
            },
            Object {
              "letterSpacing": 0,
            },
          ]
        }
      >
        GO TO MENU
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 18,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#f73859",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 14,
              "fontWeight": "bold",
              "letterSpacing": 2,
            },
            Object {
              "letterSpacing": 0,
            },
          ]
        }
      >
        PLAY AGAIN
      </Text>
    </View>
  </View>
</View>
`;

exports[`Mains Componets render correctly Stats should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#232931",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginVertical": 5,
        "paddingLeft": 5,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderRadius": 18,
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#ededed",
              "fontSize": 30,
            },
            undefined,
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <Text
      style={
        Object {
          "color": "#ededed",
          "flex": 1,
          "fontFamily": "BreeSerif",
          "fontSize": 26,
          "textAlign": "center",
        }
      }
    >
      Stats
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#232931",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#f73859"
      hidesWhenStopped={true}
      size="large"
    />
    <Text
      style={
        Object {
          "color": "#f1d18a",
          "fontSize": 20,
        }
      }
    >
      Loading
    </Text>
  </View>
</View>
`;
